apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application.fullname" . }}
  labels:
    {{- include "application.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  progressDeadlineSeconds: {{ .Values.DeadlineSeconds }}  
  selector:
    matchLabels:
      {{- include "application.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "application.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "application.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: APPNAME
              value: {{ .Values.nameOverride }}
            - name: ENV
              value: {{ .Values.settings.profile }}
            - name: PROFILE
              value: {{ .Values.settings.profile }}
            - name: DOCKER_HOST
              value: {{ .Values.settings.profile }}
            {{- if .Values.settings.golang.goMaxProcs }}
            - name: GOMAXPROCS
              value: {{ .Values.settings.golang.goMaxProcs }}
            {{- end }}
            {{- if .Values.settings.golang.goMemLimit }}
            - name: GOMEMLIMIT
              value: {{ .Values.settings.golang.goMemLimit }}
            {{- end }}
            {{- if .Values.settings.golang.goGc }}
            - name: GOGC
              value: {{ .Values.settings.golang.goGc }}
            {{- end }}
            {{- if .Values.settings.cockroachDb }}
            - name: COCKROACH_CONNECTION_STRING
              value: "postgresql://{{ .Values.settings.cockroachDb.username }}:{{ .Values.settings.cockroachDb.password }}@{{ .Values.settings.cockroachDb.host }}:{{ .Values.settings.cockroachDb.port }}/%s"
            - name: COCKROACH_DB
              value: {{ .Values.settings.cockroachDb.databaseName }}
            {{- end }}
            {{- if .Values.settings.nats }}
            - name: NATS_URL
              value: {{ .Values.settings.nats.url }}
            - name: NATS_USER
              value: {{ .Values.settings.nats.user }}
            - name: NATS_PASSWORD
              value: {{ .Values.settings.nats.password }}
            {{- end }}
            {{- if .Values.settings.redis.clusterUrl }}
            - name: REDIS_ADDRESS
              value: {{ .Values.settings.redis.clusterUrl }}
            {{- else }}
            - name: REDIS_HOST
              value: {{ .Values.settings.redis.host }}
            - name: REDIS_PORT
              value: {{ .Values.settings.redis.port }}
            - name: REDIS_PASSWORD
              value: {{ .Values.settings.redis.password }}
            {{- end }}
            {{- if .Values.settings.logstash }}
            - name: LOGSTASH_HOST
              value: {{ .Values.settings.logstash.host }}
            - name: LOGSTASH_PORT
              value: {{ .Values.settings.logstash.port }}
            {{- end }}
            {{- if .Values.settings.auth.jwt }}
            - name: PLUGIN_AUTH_JWT_SECRET_KEY
              value: {{ .Values.settings.auth.jwt.secret }}
            {{- end }}
            {{- if .Values.settings.auth.base64.htmlCssV1Request }}
            - name: DIRTY_MODEL_PRIVATE_ENDPOINT_USERNAME
              value: {{ .Values.settings.auth.base64.htmlCssV1Request.username }}
            - name: DIRTY_MODEL_PRIVATE_ENDPOINT_PASSWORD
              value: {{ .Values.settings.auth.base64.htmlCssV1Request.password }}
            {{- end }}
            {{- if .Values.settings.accessControlAllowOrigin }}
            - name: HTTP_CORS_ALLOWED_ORIGINS
              value: {{ .Values.settings.accessControlAllowOrigin }}
            {{- end }}
            {{- if .Values.settings.changedEmailNotificationDebounceTime }}
            - name: CHANGED_EMAIL_NOTIFICATION_SEND_DEBOUNCE_TIME
              value: {{ .Values.settings.changedEmailNotificationDebounceTime }}
            {{- end }}
            {{- if .Values.settings.rateLimits }}
            - name: RATE_LIMITER_WEBSOCKET_MSGS_DEFAULT_JSON_CONFIG
              value: {{ .Values.settings.rateLimits.ws.defaultMessage }}
            - name: RATE_LIMITER_WEBSOCKET_MSGS_CURSOR_JSON_CONFIG
              value: {{ .Values.settings.rateLimits.ws.cursorMessage }}
            - name: RATE_LIMITER_HTTP_JSON_CONFIG_DEFAULT
              value: {{ .Values.settings.rateLimits.rest.defaultRequest }}
            - name: RATE_LIMITER_HTTP_JSON_CONFIG
              value: "{\"EmailModelCompilationV1\":{{ .Values.settings.rateLimits.rest.compileRequest }}, \"EmailModelHtmlCssV1\":{{ .Values.settings.rateLimits.rest.htmlCssV1Request }}"
            {{- end }}
            {{- toYaml .Values.env | nindent 12 }}
          ports:
            - name: http
              containerPort: 7071
              protocol: TCP
            - name: prometheus
              containerPort: 9145
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /version
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: 1
            timeoutSeconds: 2
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            httpGet:
              path: /version
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: 1
            timeoutSeconds: 2
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            httpGet:
              path: /version
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            successThreshold: 1
            timeoutSeconds: 2
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.configmap.enabled }}
          volumeMounts:
            - name: properties
              mountPath: /usr/src/app/config/
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.configmap.enabled }}
      volumes:
        - name: properties
          configMap:
            name: {{ .Values.fullnameOverride }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
