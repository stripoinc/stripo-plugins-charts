# Default values for ai-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

DeadlineSeconds: 120

image:
  repository: esputnik/ai-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: 
  - name: dockerhub

nameOverride: ""

fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

livenessProbe:
  initialDelaySeconds: 120
  periodSeconds: 10
  failureThreshold: 6

readinessProbe:
  initialDelaySeconds: 40
  periodSeconds: 10
  failureThreshold: 8

podAnnotations: 
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8080"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    memory: 628Mi
  requests:
    memory: 628Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env: 
  - name: APPNAME
    value: ai-service
  - name: ENV
    value: PLUGINS
  - name: PROFILE
    value: PLUGINS
  - name: SPRING_CONFIG_NAME
    value: application,jdbc,log,base
  - name: SPRING_CONFIG_LOCATION
    value: file:///config/
  - name: JVM_MEMORY_OPTS
    value: -Xss256k -Xms128m -Xmx256m -XX:ReservedCodeCacheSize=128M  -Dspring.cloud.config.enabled=false


configmap:
  enabled: true
  extraScrapeConfigs:
    application.properties: |
      spring.datasource.url=jdbc:postgresql://postgres:5432/ai_service
      spring.datasource.username=example
      spring.datasource.password=secret
    log.properties: |
      logging.level.root=INFO
    base.properties: |
      chat-gpt.baseUrl=https://api.openai.com
      chat-gpt.model=gpt-3.5-turbo
      chat-gpt.temperature=1.0
      service.mode=plugin
      chat-gpt.stream.timeout=60000
      management.endpoints.web.exposure.include=health,prometheus,metrics
      management.endpoint.health.probes.enabled=true
      management.metrics.tags.application=${spring.application.name}
      management.server.port=8081
      management.tracing.sampling.probability=0
